Code description

This code is using OpenMP standart to perform parallel execution
Threads number is taken from standart envinronment variable "OMP_NUM_THREADS"
It solves the partial derriviatives equation:
\frac{\partial U}{\partial t}

\frac{\partial^2 U}{\partial x^2}
+
\frac{\partial^2 U}{\partial y^2}
+
f(x, y, t)

Where computational domain D is a square: 0 <= x <= 1, 0 <= y <= 1

Only Dirichlet boundary condition is supported



Compiling g++ -fopenmp [-Wall] -o parallel_tasks.out



Exectuing variants:
1) Using default values for 'm', h = 1/m - spaitial step

   ./parallel_tasks.out

2) Set 'm'=10 form command line
   ./parallel_tasks 10

